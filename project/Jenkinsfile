pipeline {
    agent any

    environment {
        // TODO: Replace with your Docker Hub username
        DOCKER_REGISTRY = 'your-dockerhub-username'
        BACKEND_IMAGE = "${DOCKER_REGISTRY}/backend:${BUILD_NUMBER}"
        FRONTEND_IMAGE = "${DOCKER_REGISTRY}/frontend:${BUILD_NUMBER}"
        // TODO: Replace with your Jenkins Docker credentials ID
        DOCKER_CREDENTIALS = 'dockerhub-credentials-id'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build Backend Image') {
            steps {
                dir('backend') {
                    script {
                        docker.build(env.BACKEND_IMAGE, '.')
                    }
                }
            }
        }
        stage('Build Frontend Image') {
            steps {
                script {
                    docker.build(env.FRONTEND_IMAGE, '.')
                }
            }
        }
        stage('Push Images') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                    docker push $BACKEND_IMAGE
                    docker push $FRONTEND_IMAGE
                    '''
                }
            }
        }
        stage('Test') {
            steps {
                // Run backend tests if present
                dir('backend') {
                    script {
                        if (fileExists('package.json')) {
                            sh 'npm install' // Ensure dev dependencies for tests
                            sh 'npm test || echo "No backend tests found or tests failed."'
                        }
                    }
                }
                // Run frontend tests if present
                dir('..') {
                    script {
                        if (fileExists('package.json')) {
                            sh 'npm install' // Ensure dev dependencies for tests
                            sh 'npm test || echo "No frontend tests found or tests failed."'
                        }
                    }
                }
            }
        }
    }
} 